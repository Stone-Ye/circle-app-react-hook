{"version":3,"file":"static/js/310.e86806cb.chunk.js","mappings":"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","sources":["webpack://cicle-app/./src/views/Component/HeadNav/index.module.css?c2c9","views/Component/HeadNav/index.js","webpack://cicle-app/./src/views/OfferHistory/index.module.css?31b7","views/OfferHistory/index.js","views/Utils/global.js","views/Utils/time.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"top_nav\":\"HeadNav_top_nav__ZUJ2B\"};","\nimport { NavBar } from 'antd-mobile'\nimport styles from './index.module.css'\nimport {\n  useNavigate,\n  useLocation\n} from 'react-router-dom'\n\nexport default function HeadNav ({ title }) {\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  return <div className={styles.top_nav}>\n    <NavBar onBack={() => {\n      // console.log(\"location: \", location)\n      // if (['/messagedetails', '/home', '/productDetails'].includes(location.pathname)) {\n      //   navigate('/home')\n      // }\n      // else\n      //   navigate(-1)\n      navigate('/home')\n    }} >{title}</NavBar>\n  </div>\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OfferHistory_container__SnXTF\",\"top_nav\":\"OfferHistory_top_nav__NAASD\",\"ItemContent\":\"OfferHistory_ItemContent__AI02t\",\"ItemContentLeft\":\"OfferHistory_ItemContentLeft__rrKcq\"};","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Grid, CapsuleTabs, Space, Radio } from 'antd-mobile'\nimport styles from './index.module.css'\nimport {\n  getProductsData, getUserName, getAllUserInfos, getCurrentUserInfos, updateAllUserInfos\n} from '../Utils/global'\nimport { getCurrentTime } from '../Utils/time'\nimport HeadNav from '../Component/HeadNav'\n\n\nexport default function OfferHistory () {\n\n  const navigate = useNavigate()\n  const [curActiveIndex, setCurActiveIndex] = useState('1')\n  const [curUserInfos, setCurUserInfos] = useState({})\n  const [allProductInfos, setAllProductInfos] = useState({})\n  const tarbars = [{ id: 1, title: 'My Offers' }, { id: 2, title: 'Waitting List' }, { id: 3, title: 'My Orders' }]\n\n\n  useEffect(() => {\n    setCurUserInfos(getCurrentUserInfos())\n    setAllProductInfos(getProductsData())\n  }, [])\n\n\n  const Middle = ({ curUserInfos, curActiveIndex }) => {\n\n    console.log('curUserInfos: ', curUserInfos)\n\n    let userDatas = []\n    switch (Number(curActiveIndex)) {\n      case 1:\n        userDatas = curUserInfos.offers ? curUserInfos.offers : []\n        break\n      case 2:\n        userDatas = curUserInfos['orders'] ? curUserInfos['orders'] : []\n        userDatas = userDatas.filter((item) => item.status == 0)\n        break\n\n      case 3:\n        userDatas = curUserInfos.orders ? curUserInfos.orders : []\n        // 根据status状态过滤，status:0:待处理,1:拒绝,2：接受\n\n        break\n\n      default:\n        break\n    }\n\n    userDatas = userDatas.filter((item) => item.isValid == 1)\n\n\n    let statusInfos = { 0: 'Waiting', 1: 'Agree', 2: 'Reject' }\n\n    const waitingListsStatusChangeCallback = (value, offerId, buyer, productId, index) => {\n      console.log(\"waitingListsStatusChangeCallback: \", value, productId, index)\n\n      let newCurUserInfos = { ...curUserInfos }\n      let curUername = getUserName()\n\n      let allUserInfos = getAllUserInfos()\n      newCurUserInfos['orders'][index].status = Number(value)\n      allUserInfos[curUername] = newCurUserInfos\n\n      allUserInfos[buyer]['offers'][offerId].stepInfos = { 'status': Number(value), 'time': getCurrentTime() }\n\n      updateAllUserInfos(allUserInfos)\n      setCurUserInfos(newCurUserInfos)\n    }\n\n    return userDatas == [] ? '' : <div>\n      <Grid columns={1} >\n        {userDatas.map((item, index) => {\n\n          let { imgs, title, price, seller } = allProductInfos[item.productId]\n          console.log('index: ', index)\n          console.log('item: ', item)\n\n          return <Grid.Item key={'iteminfos' + index} onClick={() => {\n            if (curActiveIndex == 1) {\n              navigate('/checkyouroffer', { replace: true, state: { 'productInfos': allProductInfos[item.productId], 'offerDetails': item } })\n            }\n          }\n          }>\n            <div className={styles.ItemContent} >\n              <div>\n                {curActiveIndex == 1 ? <p>Seller: {seller}</p> : <p>Buyer: {item['buyer']} </p>}\n\n                <p>{item['time']}</p>\n              </div>\n\n              <div>\n                <div className={styles.ItemContentLeft}>\n                  <div><img src={imgs[0]} width='100px' height='100px' /></div>\n                  {curActiveIndex == 1 ? <div>Status: {statusInfos[item.stepInfos.status]} </div> :\n                    curActiveIndex == 2 ? <div>\n                      <Radio.Group onChange={(value) => waitingListsStatusChangeCallback(value, item.offerId, item.buyer, item.productId, item.itemId)}>\n                        <Space >\n                          <Radio value='1' style={{\n                            '--icon-size': '16px',\n                            '--font-size': '12px',\n                            '--gap': '6px',\n                          }}>Agree</Radio>\n                          <Radio value='2' style={{\n                            '--icon-size': '16px',\n                            '--font-size': '12px',\n                            '--gap': '6px',\n                          }}>Reject</Radio>\n                        </Space>\n                      </Radio.Group>\n                    </div> : curActiveIndex == 3 ? <div>\n                      State: {statusInfos[item.status]}\n                    </div> : ''}\n\n                </div>\n\n                <div className={styles.ItemContentRight}>\n                  <p>{title}</p>\n                  <p>Asking price:   {price}</p>\n                  <p>Offer price:   {item['offerPrice']}</p>\n\n                </div>\n\n              </div>\n\n            </div>\n          </Grid.Item>\n        }\n        )}\n      </Grid>\n    </div >\n\n  }\n\n\n\n  if (allProductInfos == {}) return <></>\n\n\n\n  return <div className={styles.container}>\n    <HeadNav title='Offer History' />\n    <div className={styles.body}>\n      <CapsuleTabs activeKey={curActiveIndex} onChange={(index) => setCurActiveIndex(index)} >\n        {\n          tarbars.map((item) => {\n            return <CapsuleTabs.Tab title={item.title} key={item.id.toString()}>\n              <Middle\n                key={'middle' + item.id}\n                curUserInfos={curUserInfos}\n                curActiveIndex={curActiveIndex} />\n            </CapsuleTabs.Tab>\n          }\n          )\n        }\n      </CapsuleTabs>\n    </div>\n  </div >\n\n}\n","\nconst getUserName = () => localStorage.getItem('userName')\nconst setUserName = (value) => localStorage.setItem('userName', value)\nconst removeUserName = () => localStorage.removeItem('userName')\nconst isAuth = () => !!getUserName()\nconst getAllUserInfos = () => JSON.parse(localStorage.getItem('allUserInfos'))\nconst updateAllUserInfos = (value) => localStorage.setItem('allUserInfos', JSON.stringify(value))\nconst getProductsData = () => JSON.parse(localStorage.getItem('productsData'))\nconst updateProductsData = (value) => localStorage.setItem('productsData', JSON.stringify(value))\nconst getCurrentUserInfos = () => JSON.parse(localStorage.getItem('allUserInfos'))[getUserName()]\nconst getCategorysData = () => JSON.parse(localStorage.getItem('categorysData'))\nconst getAllProductCommentInfos = () => JSON.parse(localStorage.getItem('allProductCommentInfos'))\nconst updateAllProductCommentInfos = (value) => localStorage.setItem('allProductCommentInfos', JSON.stringify(value))\nconst getCurProductCommentInfosById = (id) => JSON.parse(localStorage.getItem('allProductCommentInfos'))[id]\nconst getCurrentProduct = (id) => getProductsData()[id]\nexport {\n  getUserName,\n  setUserName,\n  removeUserName,\n  isAuth,\n  getAllUserInfos,\n  getProductsData,\n  getCurrentProduct,\n  updateProductsData,\n  updateAllUserInfos,\n  getCurrentUserInfos,\n  getAllProductCommentInfos,\n  updateAllProductCommentInfos,\n  getCurProductCommentInfosById,\n  getCategorysData\n}\n\n\n","/**\n * HH:MM yyyy/MM/dd \n */\nfunction getCurrentTime () {\n  var date = new Date()\n  var month = zeroFill(date.getMonth() + 1)\n  var day = zeroFill(date.getDate())\n  var hour = zeroFill(date.getHours())\n  var minute = zeroFill(date.getMinutes())\n  // var second = zeroFill(date.getSeconds())\n\n  var curTime = hour + \":\" + minute + \" \" + day + \"/\" + month + \"/\" + date.getFullYear()\n\n  return curTime\n}\n\n\n/**\n *  yyyy/MM/dd HH:MM\n */\nfunction getCurrentTimeFromYear2min () {\n  var date = new Date()\n  var month = zeroFill(date.getMonth() + 1)\n  var day = zeroFill(date.getDate())\n  var hour = zeroFill(date.getHours())\n  var minute = zeroFill(date.getMinutes())\n\n  var curTime = date.getFullYear() + \"/\" + month + \"/\" + day + \" \" + hour + \":\" + minute\n\n  return curTime\n}\n\n\n\n/**\n* fill 0\n*/\nfunction zeroFill (i) {\n  if (i >= 0 && i <= 9) {\n    return \"0\" + i\n  } else {\n    return i\n  }\n}\n\n\n\n\nexport { getCurrentTime, getCurrentTimeFromYear2min }"],"names":["HeadNav","title","navigate","useNavigate","useLocation","className","styles","onBack","OfferHistory","useState","curActiveIndex","setCurActiveIndex","curUserInfos","setCurUserInfos","allProductInfos","setAllProductInfos","useEffect","getCurrentUserInfos","getProductsData","Middle","console","log","userDatas","Number","offers","filter","item","status","orders","isValid","statusInfos","columns","map","index","productId","imgs","price","seller","onClick","replace","state","src","width","height","stepInfos","onChange","value","offerId","buyer","newCurUserInfos","curUername","getUserName","allUserInfos","getAllUserInfos","getCurrentTime","updateAllUserInfos","waitingListsStatusChangeCallback","itemId","style","activeKey","id","toString","localStorage","getItem","setUserName","setItem","removeUserName","removeItem","isAuth","JSON","parse","stringify","updateProductsData","getCategorysData","getAllProductCommentInfos","updateAllProductCommentInfos","getCurrentProduct","date","Date","month","zeroFill","getMonth","day","getDate","getHours","getMinutes","getFullYear","getCurrentTimeFromYear2min","hour","minute","i"],"sourceRoot":""}