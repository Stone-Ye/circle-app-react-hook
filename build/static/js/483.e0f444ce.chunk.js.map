{"version":3,"file":"static/js/483.e0f444ce.chunk.js","mappings":"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","sources":["webpack://cicle-app/./src/views/Component/Register/index.module.css?69f0","views/Component/Register/index.js","views/Utils/global.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contanier\":\"Register_contanier__6iL4X\",\"contanierContent\":\"Register_contanierContent__7S-JO\",\"head_line\":\"Register_head_line__3f8Fu\",\"back\":\"Register_back__wvO0k\",\"form\":\"Register_form__ucgJf\",\"name\":\"Register_name__A2iDA\",\"email\":\"Register_email__1DCbC\",\"password\":\"Register_password__oFDfl\",\"register_btn\":\"Register_register_btn__VNJVA\",\"login\":\"Register_login__sFc1-\"};","import styles from './index.module.css'\nimport circle_logo from '../../../asserts/logo/circle_logo.png'\nimport { LeftOutline } from 'antd-mobile-icons'\nimport React, { useState, useEffect } from 'react'\nimport { Form, Input, Button, Toast } from 'antd-mobile'\nimport { useNavigate } from 'react-router-dom'\nimport { getAllUserInfos, updateAllUserInfos } from '../../Utils/global'\n\nexport default function Register () {\n  const navigate = useNavigate()\n  const [allUserInfos, setallUserInfos] = useState({})\n  useEffect(() => {\n    setallUserInfos(getAllUserInfos())\n  }, [])\n\n\n  const summitCallback = ({ username, email, password }) => {\n\n    window.scrollTo(0, 0)\n    console.log('username: ', username)\n    console.log('email: ', email)\n    console.log('password: ', password)\n    if (username.length < 1 || email.length < 1 || password.length < 1) {\n      Toast.show({\n        content: \"name or email or password can't empty !\"\n      })\n      return\n    }\n\n\n\n    if (allUserInfos[username]) {\n      Toast.show({\n        content: 'username already exists!'\n      })\n    }\n    else {\n\n\n\n      allUserInfos[username] = {\n        'wishList': [],\n        'postList': [],\n        'avatarUrl': 'https://s2.loli.net/2022/10/05/mHKQROAML3vdDC9.png',\n        'offers': [],\n        'orders': [],\n        'userName': username,\n        'userId': username,\n        'password': password,\n        'email': email,\n        'messageInfos': {}\n      }\n\n\n      updateAllUserInfos(allUserInfos)\n\n      Toast.show({\n        content: 'register is successful !'\n      })\n      navigate('/login')\n    }\n\n\n\n\n  }\n\n\n\n  return <div className={styles.contanier}>\n\n    <div className={styles.contanierContent}>\n      <div className={styles.head_line}>\n        <p>Sign Up</p>\n        <img src={circle_logo} />\n      </div>\n\n      <div onClick={() => {\n        window.scrollTo(0, 0)\n        navigate('/home')\n      }} className={styles.back}>\n        <LeftOutline />\n      </div>\n\n      <div className={styles.form} >\n\n        <Form\n          onFinish={summitCallback}\n          footer={\n            <>\n              <Button block type='submit' size='large'>\n                Register\n              </Button>\n            </>\n          }\n        >\n          <Form.Item\n            name='username'\n            label='username'\n            className={styles.username}\n            rules={[{ required: true, message: 'username is required' }]}\n          >\n            <Input type='text' placeholder='username' />\n          </Form.Item>\n          <Form.Item\n            name='email'\n            label='email'\n            className={styles.email}\n            rules={[{ required: true, message: 'email is required' }]}\n          >\n            <Input type='email' placeholder='email' />\n          </Form.Item>\n          <Form.Item\n            name='password'\n            label='password'\n            rules={[{ required: true, message: 'password is required' }]}\n          >\n            <Input type='password' placeholder='password' />\n          </Form.Item>\n\n          <div>\n\n          </div>\n        </Form>\n        <div className={styles.tips}>\n          <div>Already have an account?\n            <span className={styles.login} onClick={() => {\n              window.scrollTo(0, 0)\n              navigate('/login')\n            }}> Log in</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n}","\nconst getUserName = () => localStorage.getItem('userName')\nconst setUserName = (value) => localStorage.setItem('userName', value)\nconst removeUserName = () => localStorage.removeItem('userName')\nconst isAuth = () => !!getUserName()\nconst getAllUserInfos = () => JSON.parse(localStorage.getItem('allUserInfos'))\nconst updateAllUserInfos = (value) => localStorage.setItem('allUserInfos', JSON.stringify(value))\nconst getProductsData = () => JSON.parse(localStorage.getItem('productsData'))\nconst updateProductsData = (value) => localStorage.setItem('productsData', JSON.stringify(value))\nconst getCurrentUserInfos = () => JSON.parse(localStorage.getItem('allUserInfos'))[getUserName()]\nconst getCategorysData = () => JSON.parse(localStorage.getItem('categorysData'))\nconst getAllProductCommentInfos = () => JSON.parse(localStorage.getItem('allProductCommentInfos'))\nconst updateAllProductCommentInfos = (value) => localStorage.setItem('allProductCommentInfos', JSON.stringify(value))\nconst getCurProductCommentInfosById = (id) => JSON.parse(localStorage.getItem('allProductCommentInfos'))[id]\nconst getCurrentProduct = (id) => getProductsData()[id]\nexport {\n  getUserName,\n  setUserName,\n  removeUserName,\n  isAuth,\n  getAllUserInfos,\n  getProductsData,\n  getCurrentProduct,\n  updateProductsData,\n  updateAllUserInfos,\n  getCurrentUserInfos,\n  getAllProductCommentInfos,\n  updateAllProductCommentInfos,\n  getCurProductCommentInfosById,\n  getCategorysData\n}\n\n\n"],"names":["Register","navigate","useNavigate","useState","allUserInfos","setallUserInfos","useEffect","getAllUserInfos","className","styles","src","circle_logo","onClick","window","scrollTo","LeftOutline","onFinish","username","email","password","console","log","length","Toast","content","updateAllUserInfos","footer","block","type","size","name","label","rules","required","message","placeholder","getUserName","localStorage","getItem","setUserName","value","setItem","removeUserName","removeItem","isAuth","JSON","parse","stringify","getProductsData","updateProductsData","getCurrentUserInfos","getCategorysData","getAllProductCommentInfos","updateAllProductCommentInfos","getCurrentProduct","id"],"sourceRoot":""}