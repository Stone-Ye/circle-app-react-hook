{"version":3,"file":"static/js/695.13cfa3db.chunk.js","mappings":"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","sources":["webpack://cicle-app/./src/views/Component/HeadNav/index.module.css?c2c9","views/Component/HeadNav/index.js","webpack://cicle-app/./src/views/Message/index.module.css?227f","views/Message/index.js","views/Utils/global.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"top_nav\":\"HeadNav_top_nav__ZUJ2B\"};","\nimport { NavBar } from 'antd-mobile'\nimport styles from './index.module.css'\nimport {\n  useNavigate,\n  useLocation\n} from 'react-router-dom'\n\nexport default function HeadNav ({ title }) {\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  return <div className={styles.top_nav}>\n    <NavBar onBack={() => {\n      // console.log(\"location: \", location)\n      // if (['/messagedetails', '/home', '/productDetails'].includes(location.pathname)) {\n      //   navigate('/home')\n      // }\n      // else\n      //   navigate(-1)\n      navigate('/home')\n    }} >{title}</NavBar>\n  </div>\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Message_item__zmCUW\",\"itemTime\":\"Message_itemTime__CUasM\",\"itemContent\":\"Message_itemContent__hpYUw\",\"body\":\"Message_body__55+L9\",\"messageItem\":\"Message_messageItem__01ysq\"};","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport { List } from 'antd-mobile'\nimport { getUserName, getAllUserInfos } from '../Utils/global'\nimport styles from './index.module.css'\nimport { Image } from 'antd-mobile'\nimport { List as VirtualizedList, AutoSizer } from 'react-virtualized'\nimport HeadNav from '../Component/HeadNav'\n\nconst sortedMessageByTime = (messagesObj = {}) => {\n\n  if (messagesObj == {}) return {}\n  let lastmessageList = Object.keys(messagesObj).map((key) => [key, messagesObj[key].pop()])\n  lastmessageList.sort((a, b) => a[1].time < b[1].time ? 1 : -1)\n  console.log(\"lastmessageList: \", lastmessageList)\n  return lastmessageList\n}\n\nexport default function Message () {\n  const navigate = useNavigate()\n  const [messageObjs, setMessagesObjs] = useState({})\n  const [allUserInfos, setallUserInfos] = useState({})\n  const [sortedLastMessageList, setSortedLastMessageList] = useState([])\n  useEffect(() => {\n    let tmpallUserInfos = getAllUserInfos()\n    let username = getUserName()\n    setMessagesObjs(tmpallUserInfos[username].messageInfos)\n    setSortedLastMessageList(sortedMessageByTime(tmpallUserInfos[username].messageInfos))\n    setallUserInfos(tmpallUserInfos)\n\n\n  }, [])\n\n  console.log('messageObjs: ', messageObjs)\n  console.log('sortedLastMessageList: ', sortedLastMessageList)\n\n  if (sortedLastMessageList == []) return <HeadNav title='Messages' />\n\n  const rowRenderer = ({ index,\n    key,\n    style, }) => {\n\n    const item = sortedLastMessageList[index]\n    let curUserInfos = allUserInfos[item[0]]\n\n    return <List.Item\n      key={key}\n      style={style}\n      extra={item[1].time}\n      onClick={() => {\n        navigate('/messagedetails', { replace: true, state: { 'userId': item[0] } })\n      }}\n      prefix={\n        <Image\n          src={curUserInfos.avatarUrl}\n          style={{ borderRadius: 20 }}\n          fit='cover'\n          width={60}\n          height={60}\n        />\n\n      }\n      description={item[1].content}\n    >\n      {item[0]}\n    </List.Item>\n\n\n\n  }\n  return <div className={styles.container}>\n\n    <HeadNav title='Messages' />\n    <div className={styles.body}>\n      <List >\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <VirtualizedList\n              rowCount={sortedLastMessageList.length}\n              rowRenderer={rowRenderer}\n              width={width}\n              height={sortedLastMessageList.length * 100}\n              rowHeight={100}\n              overscanRowCount={10}\n            />\n          )}\n        </AutoSizer>\n      </List>\n\n    </div>\n\n  </div>\n}","\nconst getUserName = () => localStorage.getItem('userName')\nconst setUserName = (value) => localStorage.setItem('userName', value)\nconst removeUserName = () => localStorage.removeItem('userName')\nconst isAuth = () => !!getUserName()\nconst getAllUserInfos = () => JSON.parse(localStorage.getItem('allUserInfos'))\nconst updateAllUserInfos = (value) => localStorage.setItem('allUserInfos', JSON.stringify(value))\nconst getProductsData = () => JSON.parse(localStorage.getItem('productsData'))\nconst updateProductsData = (value) => localStorage.setItem('productsData', JSON.stringify(value))\nconst getCurrentUserInfos = () => JSON.parse(localStorage.getItem('allUserInfos'))[getUserName()]\nconst getCategorysData = () => JSON.parse(localStorage.getItem('categorysData'))\nconst getAllProductCommentInfos = () => JSON.parse(localStorage.getItem('allProductCommentInfos'))\nconst updateAllProductCommentInfos = (value) => localStorage.setItem('allProductCommentInfos', JSON.stringify(value))\nconst getCurProductCommentInfosById = (id) => JSON.parse(localStorage.getItem('allProductCommentInfos'))[id]\nconst getCurrentProduct = (id) => getProductsData()[id]\nexport {\n  getUserName,\n  setUserName,\n  removeUserName,\n  isAuth,\n  getAllUserInfos,\n  getProductsData,\n  getCurrentProduct,\n  updateProductsData,\n  updateAllUserInfos,\n  getCurrentUserInfos,\n  getAllProductCommentInfos,\n  updateAllProductCommentInfos,\n  getCurProductCommentInfosById,\n  getCategorysData\n}\n\n\n"],"names":["HeadNav","title","navigate","useNavigate","useLocation","className","styles","onBack","Message","useState","messageObjs","setMessagesObjs","allUserInfos","setallUserInfos","sortedLastMessageList","setSortedLastMessageList","useEffect","tmpallUserInfos","getAllUserInfos","username","getUserName","messageInfos","messagesObj","lastmessageList","Object","keys","map","key","pop","sort","a","b","time","console","log","sortedMessageByTime","rowRenderer","index","style","item","curUserInfos","extra","onClick","replace","state","prefix","src","avatarUrl","borderRadius","fit","width","height","description","content","disableHeight","rowCount","length","rowHeight","overscanRowCount","localStorage","getItem","setUserName","value","setItem","removeUserName","removeItem","isAuth","JSON","parse","updateAllUserInfos","stringify","getProductsData","updateProductsData","getCurrentUserInfos","getCategorysData","getAllProductCommentInfos","updateAllProductCommentInfos","getCurrentProduct","id"],"sourceRoot":""}