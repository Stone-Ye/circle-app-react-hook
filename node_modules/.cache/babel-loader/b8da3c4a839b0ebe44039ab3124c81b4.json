{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_defineProperty","_class","_temp","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","clsx","React","polyfill","PositionCache","requestAnimationTimeout","cancelAnimationTimeout","emptyObject","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","Masonry","_React$PureComponent","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","isScrolling","scrollTop","setState","ref","_scrollingContainer","event","height","props","eventScrollTop","currentTarget","Math","min","max","_getEstimatedTotalHeight","_debounceResetIsScrolling","state","value","clearCellPositions","_positionCache","forceUpdate","invalidateCellSizeAfterRender","_ref","index","rowIndex","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","recomputeCellPositions","stopIndex","count","_populatePositionCache","componentDidMount","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","componentDidUpdate","prevProps","prevState","componentWillUnmount","_debounceResetIsScrollingId","render","_this2","_this$props","autoHeight","cellCount","cellMeasurerCache","cellRenderer","className","id","keyMapper","overscanByPixels","role","style","tabIndex","width","rowDirection","_this$state","children","estimateTotalHeight","shortestColumnSize","measuredCellCount","startIndex","range","left","top","_style","parent","getHeight","getWidth","batchSize","ceil","defaultHeight","defaultWidth","_index","_startIndex","_stopIndex","createElement","_setScrollingContainerRef","onScroll","_onScroll","boxSizing","direction","overflowX","overflowY","position","WebkitOverflowScrolling","willChange","maxWidth","maxHeight","overflow","pointerEvents","scrollingResetTimeInterval","_debounceResetIsScrollingCallback","_this$props2","estimatedColumnCount","floor","_this$props3","_onScrollMemoized","clientHeight","scrollHeight","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","_this$props4","cellPositioner","_index2","_cellPositioner","setPosition","getDerivedStateFromProps","nextProps","undefined","PureComponent","process","env","NODE_ENV","PropTypes","bool","isRequired","number","CellMeasurerCache","instanceOf","any","Positioner","CellRenderer","string","KeyMapper","OnCellsRenderedCallback","OnScrollCallback","propName","componentName","prototype","hasOwnProperty","Error","identity","noop","bpfrpt_proptype_CellMeasurerCache","func","bpfrpt_proptype_Positioner","bpfrpt_proptype_AnimationTimeoutId"],"sources":["/Users/stoneye/react_project/circle-app-react-hook/node_modules/react-virtualized/dist/es/Masonry/Masonry.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,0BAAP,MAAuC,kDAAvC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;AAEA,IAAIC,MAAJ,EAAYC,KAAZ;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;EAAE,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;EAAgC,IAAIG,MAAM,CAACC,qBAAX,EAAkC;IAAE,IAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;IAAoD,IAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;MAAE,OAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;IAAiE,CAAjG,CAAV;IAA8GP,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;EAAiC;;EAAC,OAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;IAAuD,IAAIA,CAAC,GAAG,CAAR,EAAW;MAAEf,OAAO,CAACkB,MAAD,EAAS,IAAT,CAAP,CAAsBC,OAAtB,CAA8B,UAAUC,GAAV,EAAe;QAAEvB,eAAe,CAACiB,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;MAA4C,CAA3F;IAA+F,CAA5G,MAAkH,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;MAAEjB,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;IAA4E,CAApH,MAA0H;MAAElB,OAAO,CAACkB,MAAD,CAAP,CAAgBC,OAAhB,CAAwB,UAAUC,GAAV,EAAe;QAAEhB,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;MAAmF,CAA5H;IAAgI;EAAE;;EAAC,OAAON,MAAP;AAAgB;;AAEtgB,OAAOU,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,uBAAT,EAAkCC,sBAAlC,QAAgE,kCAAhE;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,qCAAqC,GAAG,GAA5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,IAAIjC,KAAK,GAAGD,MAAM,GAC7B,aACA,UAAUmC,oBAAV,EAAgC;EAC9BrC,SAAS,CAACoC,OAAD,EAAUC,oBAAV,CAAT;;EAEA,SAASD,OAAT,GAAmB;IACjB,IAAIE,gBAAJ;;IAEA,IAAIC,KAAJ;;IAEA5C,eAAe,CAAC,IAAD,EAAOyC,OAAP,CAAf;;IAEA,KAAK,IAAII,IAAI,GAAGpB,SAAS,CAACC,MAArB,EAA6BoB,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;MACvFF,IAAI,CAACE,IAAD,CAAJ,GAAavB,SAAS,CAACuB,IAAD,CAAtB;IACD;;IAEDJ,KAAK,GAAG1C,0BAA0B,CAAC,IAAD,EAAO,CAACyC,gBAAgB,GAAGxC,eAAe,CAACsC,OAAD,CAAnC,EAA8CQ,IAA9C,CAAmD5B,KAAnD,CAAyDsB,gBAAzD,EAA2E,CAAC,IAAD,EAAOO,MAAP,CAAcJ,IAAd,CAA3E,CAAP,CAAlC;;IAEAxC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,OAAhC,EAAyC;MACtDO,WAAW,EAAE,KADyC;MAEtDC,SAAS,EAAE;IAF2C,CAAzC,CAAf;;IAKA9C,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,6BAAhC,EAA+D,KAAK,CAApE,CAAf;;IAEAtC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,+BAAhC,EAAiE,IAAjE,CAAf;;IAEAtC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,8BAAhC,EAAgE,IAAhE,CAAf;;IAEAtC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,gBAAhC,EAAkD,IAAIR,aAAJ,EAAlD,CAAf;;IAEA9B,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,aAAhC,EAA+C,IAA/C,CAAf;;IAEAtC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,qBAAhC,EAAuD,IAAvD,CAAf;;IAEAtC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,YAAhC,EAA8C,IAA9C,CAAf;;IAEAtC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,oBAAhC,EAAsD,IAAtD,CAAf;;IAEAtC,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,mCAAhC,EAAqE,YAAY;MAC9FA,KAAK,CAACS,QAAN,CAAe;QACbF,WAAW,EAAE;MADA,CAAf;IAGD,CAJc,CAAf;;IAMA7C,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,2BAAhC,EAA6D,UAAUU,GAAV,EAAe;MACzFV,KAAK,CAACW,mBAAN,GAA4BD,GAA5B;IACD,CAFc,CAAf;;IAIAhD,eAAe,CAACF,sBAAsB,CAACwC,KAAD,CAAvB,EAAgC,WAAhC,EAA6C,UAAUY,KAAV,EAAiB;MAC3E,IAAIC,MAAM,GAAGb,KAAK,CAACc,KAAN,CAAYD,MAAzB;MACA,IAAIE,cAAc,GAAGH,KAAK,CAACI,aAAN,CAAoBR,SAAzC,CAF2E,CAEvB;MACpD;MACA;MACA;;MAEA,IAAIA,SAAS,GAAGS,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYnB,KAAK,CAACoB,wBAAN,KAAmCP,MAA/C,CAAT,EAAiEE,cAAjE,CAAhB,CAP2E,CAOuB;MAClG;;MAEA,IAAIA,cAAc,KAAKP,SAAvB,EAAkC;QAChC;MACD,CAZ0E,CAYzE;;;MAGFR,KAAK,CAACqB,yBAAN,GAf2E,CAexC;MACnC;MACA;MACA;;;MAGA,IAAIrB,KAAK,CAACsB,KAAN,CAAYd,SAAZ,KAA0BA,SAA9B,EAAyC;QACvCR,KAAK,CAACS,QAAN,CAAe;UACbF,WAAW,EAAE,IADA;UAEbC,SAAS,EAAEA;QAFE,CAAf;MAID;IACF,CA3Bc,CAAf;;IA6BA,OAAOR,KAAP;EACD;;EAED3C,YAAY,CAACwC,OAAD,EAAU,CAAC;IACrBZ,GAAG,EAAE,oBADgB;IAErBsC,KAAK,EAAE,SAASC,kBAAT,GAA8B;MACnC,KAAKC,cAAL,GAAsB,IAAIjC,aAAJ,EAAtB;MACA,KAAKkC,WAAL;IACD,CALoB,CAKnB;;EALmB,CAAD,EAOnB;IACDzC,GAAG,EAAE,+BADJ;IAEDsC,KAAK,EAAE,SAASI,6BAAT,CAAuCC,IAAvC,EAA6C;MAClD,IAAIC,KAAK,GAAGD,IAAI,CAACE,QAAjB;;MAEA,IAAI,KAAKC,6BAAL,KAAuC,IAA3C,EAAiD;QAC/C,KAAKA,6BAAL,GAAqCF,KAArC;QACA,KAAKG,4BAAL,GAAoCH,KAApC;MACD,CAHD,MAGO;QACL,KAAKE,6BAAL,GAAqCd,IAAI,CAACC,GAAL,CAAS,KAAKa,6BAAd,EAA6CF,KAA7C,CAArC;QACA,KAAKG,4BAAL,GAAoCf,IAAI,CAACE,GAAL,CAAS,KAAKa,4BAAd,EAA4CH,KAA5C,CAApC;MACD;IACF;EAZA,CAPmB,EAoBnB;IACD5C,GAAG,EAAE,wBADJ;IAEDsC,KAAK,EAAE,SAASU,sBAAT,GAAkC;MACvC,IAAIC,SAAS,GAAG,KAAKT,cAAL,CAAoBU,KAApB,GAA4B,CAA5C;MACA,KAAKV,cAAL,GAAsB,IAAIjC,aAAJ,EAAtB;;MAEA,KAAK4C,sBAAL,CAA4B,CAA5B,EAA+BF,SAA/B;;MAEA,KAAKR,WAAL;IACD;EATA,CApBmB,EA8BnB;IACDzC,GAAG,EAAE,mBADJ;IAEDsC,KAAK,EAAE,SAASc,iBAAT,GAA6B;MAClC,KAAKC,wBAAL;;MAEA,KAAKC,uBAAL;;MAEA,KAAKC,8BAAL;IACD;EARA,CA9BmB,EAuCnB;IACDvD,GAAG,EAAE,oBADJ;IAEDsC,KAAK,EAAE,SAASkB,kBAAT,CAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;MACvD,KAAKL,wBAAL;;MAEA,KAAKC,uBAAL;;MAEA,KAAKC,8BAAL;;MAEA,IAAI,KAAK1B,KAAL,CAAWN,SAAX,KAAyBkC,SAAS,CAAClC,SAAvC,EAAkD;QAChD,KAAKa,yBAAL;MACD;IACF;EAZA,CAvCmB,EAoDnB;IACDpC,GAAG,EAAE,sBADJ;IAEDsC,KAAK,EAAE,SAASqB,oBAAT,GAAgC;MACrC,IAAI,KAAKC,2BAAT,EAAsC;QACpCnD,sBAAsB,CAAC,KAAKmD,2BAAN,CAAtB;MACD;IACF;EANA,CApDmB,EA2DnB;IACD5D,GAAG,EAAE,QADJ;IAEDsC,KAAK,EAAE,SAASuB,MAAT,GAAkB;MACvB,IAAIC,MAAM,GAAG,IAAb;;MAEA,IAAIC,WAAW,GAAG,KAAKlC,KAAvB;MAAA,IACImC,UAAU,GAAGD,WAAW,CAACC,UAD7B;MAAA,IAEIC,SAAS,GAAGF,WAAW,CAACE,SAF5B;MAAA,IAGIC,iBAAiB,GAAGH,WAAW,CAACG,iBAHpC;MAAA,IAIIC,YAAY,GAAGJ,WAAW,CAACI,YAJ/B;MAAA,IAKIC,SAAS,GAAGL,WAAW,CAACK,SAL5B;MAAA,IAMIxC,MAAM,GAAGmC,WAAW,CAACnC,MANzB;MAAA,IAOIyC,EAAE,GAAGN,WAAW,CAACM,EAPrB;MAAA,IAQIC,SAAS,GAAGP,WAAW,CAACO,SAR5B;MAAA,IASIC,gBAAgB,GAAGR,WAAW,CAACQ,gBATnC;MAAA,IAUIC,IAAI,GAAGT,WAAW,CAACS,IAVvB;MAAA,IAWIC,KAAK,GAAGV,WAAW,CAACU,KAXxB;MAAA,IAYIC,QAAQ,GAAGX,WAAW,CAACW,QAZ3B;MAAA,IAaIC,KAAK,GAAGZ,WAAW,CAACY,KAbxB;MAAA,IAcIC,YAAY,GAAGb,WAAW,CAACa,YAd/B;MAeA,IAAIC,WAAW,GAAG,KAAKxC,KAAvB;MAAA,IACIf,WAAW,GAAGuD,WAAW,CAACvD,WAD9B;MAAA,IAEIC,SAAS,GAAGsD,WAAW,CAACtD,SAF5B;MAGA,IAAIuD,QAAQ,GAAG,EAAf;;MAEA,IAAIC,mBAAmB,GAAG,KAAK5C,wBAAL,EAA1B;;MAEA,IAAI6C,kBAAkB,GAAG,KAAKxC,cAAL,CAAoBwC,kBAA7C;MACA,IAAIC,iBAAiB,GAAG,KAAKzC,cAAL,CAAoBU,KAA5C;MACA,IAAIgC,UAAU,GAAG,CAAjB;MACA,IAAIjC,SAAJ;;MAEA,KAAKT,cAAL,CAAoB2C,KAApB,CAA0BnD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYX,SAAS,GAAGgD,gBAAxB,CAA1B,EAAqE3C,MAAM,GAAG2C,gBAAgB,GAAG,CAAjG,EAAoG,UAAU3B,KAAV,EAAiBwC,IAAjB,EAAuBC,GAAvB,EAA4B;QAC9H,IAAIC,MAAJ;;QAEA,IAAI,OAAOrC,SAAP,KAAqB,WAAzB,EAAsC;UACpCiC,UAAU,GAAGtC,KAAb;UACAK,SAAS,GAAGL,KAAZ;QACD,CAHD,MAGO;UACLsC,UAAU,GAAGlD,IAAI,CAACC,GAAL,CAASiD,UAAT,EAAqBtC,KAArB,CAAb;UACAK,SAAS,GAAGjB,IAAI,CAACE,GAAL,CAASe,SAAT,EAAoBL,KAApB,CAAZ;QACD;;QAEDkC,QAAQ,CAACvF,IAAT,CAAc4E,YAAY,CAAC;UACzBvB,KAAK,EAAEA,KADkB;UAEzBtB,WAAW,EAAEA,WAFY;UAGzBtB,GAAG,EAAEsE,SAAS,CAAC1B,KAAD,CAHW;UAIzB2C,MAAM,EAAEzB,MAJiB;UAKzBW,KAAK,GAAGa,MAAM,GAAG;YACf1D,MAAM,EAAEsC,iBAAiB,CAACsB,SAAlB,CAA4B5C,KAA5B;UADO,CAAT,EAELnE,eAAe,CAAC6G,MAAD,EAASV,YAAY,KAAK,KAAjB,GAAyB,MAAzB,GAAkC,OAA3C,EAAoDQ,IAApD,CAFV,EAEqE3G,eAAe,CAAC6G,MAAD,EAAS,UAAT,EAAqB,UAArB,CAFpF,EAEsH7G,eAAe,CAAC6G,MAAD,EAAS,KAAT,EAAgBD,GAAhB,CAFrI,EAE2J5G,eAAe,CAAC6G,MAAD,EAAS,OAAT,EAAkBpB,iBAAiB,CAACuB,QAAlB,CAA2B7C,KAA3B,CAAlB,CAF1K,EAEgO0C,MAFnO;QALoB,CAAD,CAA1B;MASD,CApBD,EA9BuB,CAkDnB;;;MAGJ,IAAIN,kBAAkB,GAAGzD,SAAS,GAAGK,MAAZ,GAAqB2C,gBAA1C,IAA8DU,iBAAiB,GAAGhB,SAAtF,EAAiG;QAC/F,IAAIyB,SAAS,GAAG1D,IAAI,CAACC,GAAL,CAASgC,SAAS,GAAGgB,iBAArB,EAAwCjD,IAAI,CAAC2D,IAAL,CAAU,CAACpE,SAAS,GAAGK,MAAZ,GAAqB2C,gBAArB,GAAwCS,kBAAzC,IAA+Dd,iBAAiB,CAAC0B,aAAjF,GAAiGjB,KAAjG,GAAyGT,iBAAiB,CAAC2B,YAArI,CAAxC,CAAhB;;QAEA,KAAK,IAAIC,MAAM,GAAGb,iBAAlB,EAAqCa,MAAM,GAAGb,iBAAiB,GAAGS,SAAlE,EAA6EI,MAAM,EAAnF,EAAuF;UACrF7C,SAAS,GAAG6C,MAAZ;UACAhB,QAAQ,CAACvF,IAAT,CAAc4E,YAAY,CAAC;YACzBvB,KAAK,EAAEkD,MADkB;YAEzBxE,WAAW,EAAEA,WAFY;YAGzBtB,GAAG,EAAEsE,SAAS,CAACwB,MAAD,CAHW;YAIzBP,MAAM,EAAE,IAJiB;YAKzBd,KAAK,EAAE;cACLE,KAAK,EAAET,iBAAiB,CAACuB,QAAlB,CAA2BK,MAA3B;YADF;UALkB,CAAD,CAA1B;QASD;MACF;;MAED,KAAKC,WAAL,GAAmBb,UAAnB;MACA,KAAKc,UAAL,GAAkB/C,SAAlB;MACA,OAAO5C,KAAK,CAAC4F,aAAN,CAAoB,KAApB,EAA2B;QAChCxE,GAAG,EAAE,KAAKyE,yBADsB;QAEhC,cAAc,KAAKrE,KAAL,CAAW,YAAX,CAFkB;QAGhCuC,SAAS,EAAEhE,IAAI,CAAC,2BAAD,EAA8BgE,SAA9B,CAHiB;QAIhCC,EAAE,EAAEA,EAJ4B;QAKhC8B,QAAQ,EAAE,KAAKC,SALiB;QAMhC5B,IAAI,EAAEA,IAN0B;QAOhCC,KAAK,EAAEhF,aAAa,CAAC;UACnB4G,SAAS,EAAE,YADQ;UAEnBC,SAAS,EAAE,KAFQ;UAGnB1E,MAAM,EAAEoC,UAAU,GAAG,MAAH,GAAYpC,MAHX;UAInB2E,SAAS,EAAE,QAJQ;UAKnBC,SAAS,EAAEzB,mBAAmB,GAAGnD,MAAtB,GAA+B,QAA/B,GAA0C,MALlC;UAMnB6E,QAAQ,EAAE,UANS;UAOnB9B,KAAK,EAAEA,KAPY;UAQnB+B,uBAAuB,EAAE,OARN;UASnBC,UAAU,EAAE;QATO,CAAD,EAUjBlC,KAViB,CAPY;QAkBhCC,QAAQ,EAAEA;MAlBsB,CAA3B,EAmBJrE,KAAK,CAAC4F,aAAN,CAAoB,KAApB,EAA2B;QAC5B7B,SAAS,EAAE,iDADiB;QAE5BK,KAAK,EAAE;UACLE,KAAK,EAAE,MADF;UAEL/C,MAAM,EAAEmD,mBAFH;UAGL6B,QAAQ,EAAE,MAHL;UAILC,SAAS,EAAE9B,mBAJN;UAKL+B,QAAQ,EAAE,QALL;UAMLC,aAAa,EAAEzF,WAAW,GAAG,MAAH,GAAY,EANjC;UAOLmF,QAAQ,EAAE;QAPL;MAFqB,CAA3B,EAWA3B,QAXA,CAnBI,CAAP;IA+BD;EAzGA,CA3DmB,EAqKnB;IACD9E,GAAG,EAAE,0BADJ;IAEDsC,KAAK,EAAE,SAASe,wBAAT,GAAoC;MACzC,IAAI,OAAO,KAAKP,6BAAZ,KAA8C,QAAlD,EAA4D;QAC1D,IAAIoC,UAAU,GAAG,KAAKpC,6BAAtB;QACA,IAAIG,SAAS,GAAG,KAAKF,4BAArB;QACA,KAAKD,6BAAL,GAAqC,IAArC;QACA,KAAKC,4BAAL,GAAoC,IAApC,CAJ0D,CAIhB;;QAE1C,KAAKI,sBAAL,CAA4B+B,UAA5B,EAAwCjC,SAAxC;;QAEA,KAAKR,WAAL;MACD;IACF;EAbA,CArKmB,EAmLnB;IACDzC,GAAG,EAAE,2BADJ;IAEDsC,KAAK,EAAE,SAASF,yBAAT,GAAqC;MAC1C,IAAI4E,0BAA0B,GAAG,KAAKnF,KAAL,CAAWmF,0BAA5C;;MAEA,IAAI,KAAKpD,2BAAT,EAAsC;QACpCnD,sBAAsB,CAAC,KAAKmD,2BAAN,CAAtB;MACD;;MAED,KAAKA,2BAAL,GAAmCpD,uBAAuB,CAAC,KAAKyG,iCAAN,EAAyCD,0BAAzC,CAA1D;IACD;EAVA,CAnLmB,EA8LnB;IACDhH,GAAG,EAAE,0BADJ;IAEDsC,KAAK,EAAE,SAASH,wBAAT,GAAoC;MACzC,IAAI+E,YAAY,GAAG,KAAKrF,KAAxB;MAAA,IACIoC,SAAS,GAAGiD,YAAY,CAACjD,SAD7B;MAAA,IAEIC,iBAAiB,GAAGgD,YAAY,CAAChD,iBAFrC;MAAA,IAGIS,KAAK,GAAGuC,YAAY,CAACvC,KAHzB;MAIA,IAAIwC,oBAAoB,GAAGnF,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYF,IAAI,CAACoF,KAAL,CAAWzC,KAAK,GAAGT,iBAAiB,CAAC2B,YAArC,CAAZ,CAA3B;MACA,OAAO,KAAKrD,cAAL,CAAoBuC,mBAApB,CAAwCd,SAAxC,EAAmDkD,oBAAnD,EAAyEjD,iBAAiB,CAAC0B,aAA3F,CAAP;IACD;EATA,CA9LmB,EAwMnB;IACD5F,GAAG,EAAE,yBADJ;IAEDsC,KAAK,EAAE,SAASgB,uBAAT,GAAmC;MACxC,IAAI+D,YAAY,GAAG,KAAKxF,KAAxB;MAAA,IACID,MAAM,GAAGyF,YAAY,CAACzF,MAD1B;MAAA,IAEIuE,QAAQ,GAAGkB,YAAY,CAAClB,QAF5B;MAGA,IAAI5E,SAAS,GAAG,KAAKc,KAAL,CAAWd,SAA3B;;MAEA,IAAI,KAAK+F,iBAAL,KAA2B/F,SAA/B,EAA0C;QACxC4E,QAAQ,CAAC;UACPoB,YAAY,EAAE3F,MADP;UAEP4F,YAAY,EAAE,KAAKrF,wBAAL,EAFP;UAGPZ,SAAS,EAAEA;QAHJ,CAAD,CAAR;QAKA,KAAK+F,iBAAL,GAAyB/F,SAAzB;MACD;IACF;EAhBA,CAxMmB,EAyNnB;IACDvB,GAAG,EAAE,gCADJ;IAEDsC,KAAK,EAAE,SAASiB,8BAAT,GAA0C;MAC/C,IAAI,KAAKkE,mBAAL,KAA6B,KAAK1B,WAAlC,IAAiD,KAAK2B,kBAAL,KAA4B,KAAK1B,UAAtF,EAAkG;QAChG,IAAI2B,eAAe,GAAG,KAAK9F,KAAL,CAAW8F,eAAjC;QACAA,eAAe,CAAC;UACdzC,UAAU,EAAE,KAAKa,WADH;UAEd9C,SAAS,EAAE,KAAK+C;QAFF,CAAD,CAAf;QAIA,KAAKyB,mBAAL,GAA2B,KAAK1B,WAAhC;QACA,KAAK2B,kBAAL,GAA0B,KAAK1B,UAA/B;MACD;IACF;EAZA,CAzNmB,EAsOnB;IACDhG,GAAG,EAAE,wBADJ;IAEDsC,KAAK,EAAE,SAASa,sBAAT,CAAgC+B,UAAhC,EAA4CjC,SAA5C,EAAuD;MAC5D,IAAI2E,YAAY,GAAG,KAAK/F,KAAxB;MAAA,IACIqC,iBAAiB,GAAG0D,YAAY,CAAC1D,iBADrC;MAAA,IAEI2D,cAAc,GAAGD,YAAY,CAACC,cAFlC;;MAIA,KAAK,IAAIC,OAAO,GAAG5C,UAAnB,EAA+B4C,OAAO,IAAI7E,SAA1C,EAAqD6E,OAAO,EAA5D,EAAgE;QAC9D,IAAIC,eAAe,GAAGF,cAAc,CAACC,OAAD,CAApC;QAAA,IACI1C,IAAI,GAAG2C,eAAe,CAAC3C,IAD3B;QAAA,IAEIC,GAAG,GAAG0C,eAAe,CAAC1C,GAF1B;;QAIA,KAAK7C,cAAL,CAAoBwF,WAApB,CAAgCF,OAAhC,EAAyC1C,IAAzC,EAA+CC,GAA/C,EAAoDnB,iBAAiB,CAACsB,SAAlB,CAA4BsC,OAA5B,CAApD;MACD;IACF;EAdA,CAtOmB,CAAV,EAqPR,CAAC;IACH9H,GAAG,EAAE,0BADF;IAEHsC,KAAK,EAAE,SAAS2F,wBAAT,CAAkCC,SAAlC,EAA6CxE,SAA7C,EAAwD;MAC7D,IAAIwE,SAAS,CAAC3G,SAAV,KAAwB4G,SAAxB,IAAqCzE,SAAS,CAACnC,SAAV,KAAwB2G,SAAS,CAAC3G,SAA3E,EAAsF;QACpF,OAAO;UACLD,WAAW,EAAE,IADR;UAELC,SAAS,EAAE2G,SAAS,CAAC3G;QAFhB,CAAP;MAID;;MAED,OAAO,IAAP;IACD;EAXE,CAAD,CArPQ,CAAZ;;EAmQA,OAAOX,OAAP;AACD,CAnVD,CAmVEP,KAAK,CAAC+H,aAnVR,CAFe,EAqVS3J,eAAe,CAACC,MAAD,EAAS,WAAT,EAAsB2J,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,IAAxC,GAA+C;EAC1G,cAAcC,SAAS,CAACC,IAAV,CAAeC,UAD6E;EAE1G,aAAaF,SAAS,CAACG,MAAV,CAAiBD,UAF4E;EAG1G,qBAAqB,SAASxE,iBAAT,GAA6B;IAChD,OAAO,CAAC,OAAO0E,iBAAP,KAA6B,UAA7B,GAA0CJ,SAAS,CAACK,UAAV,CAAqBD,iBAArB,EAAwCF,UAAlF,GAA+FF,SAAS,CAACM,GAAV,CAAcJ,UAA9G,EAA0HlJ,KAA1H,CAAgI,IAAhI,EAAsII,SAAtI,CAAP;EACD,CALyG;EAM1G,kBAAkB,SAASiI,cAAT,GAA0B;IAC1C,OAAO,CAAC,OAAOkB,UAAP,KAAsB,UAAtB,GAAmCP,SAAS,CAACK,UAAV,CAAqBE,UAArB,EAAiCL,UAApE,GAAiFF,SAAS,CAACM,GAAV,CAAcJ,UAAhG,EAA4GlJ,KAA5G,CAAkH,IAAlH,EAAwHI,SAAxH,CAAP;EACD,CARyG;EAS1G,gBAAgB,SAASuE,YAAT,GAAwB;IACtC,OAAO,CAAC,OAAO6E,YAAP,KAAwB,UAAxB,GAAqCR,SAAS,CAACK,UAAV,CAAqBG,YAArB,EAAmCN,UAAxE,GAAqFF,SAAS,CAACM,GAAV,CAAcJ,UAApG,EAAgHlJ,KAAhH,CAAsH,IAAtH,EAA4HI,SAA5H,CAAP;EACD,CAXyG;EAY1G,aAAa4I,SAAS,CAACS,MAZmF;EAa1G,UAAUT,SAAS,CAACG,MAAV,CAAiBD,UAb+E;EAc1G,MAAMF,SAAS,CAACS,MAd0F;EAe1G,aAAa,SAAS3E,SAAT,GAAqB;IAChC,OAAO,CAAC,OAAO4E,SAAP,KAAqB,UAArB,GAAkCV,SAAS,CAACK,UAAV,CAAqBK,SAArB,EAAgCR,UAAlE,GAA+EF,SAAS,CAACM,GAAV,CAAcJ,UAA9F,EAA0GlJ,KAA1G,CAAgH,IAAhH,EAAsHI,SAAtH,CAAP;EACD,CAjByG;EAkB1G,mBAAmB,SAAS+H,eAAT,GAA2B;IAC5C,OAAO,CAAC,OAAOwB,uBAAP,KAAmC,UAAnC,GAAgDX,SAAS,CAACK,UAAV,CAAqBM,uBAArB,CAAhD,GAAgGX,SAAS,CAACM,GAA3G,EAAgHtJ,KAAhH,CAAsH,IAAtH,EAA4HI,SAA5H,CAAP;EACD,CApByG;EAqB1G,YAAY,SAASuG,QAAT,GAAoB;IAC9B,OAAO,CAAC,OAAOiD,gBAAP,KAA4B,UAA5B,GAAyCZ,SAAS,CAACK,UAAV,CAAqBO,gBAArB,CAAzC,GAAkFZ,SAAS,CAACM,GAA7F,EAAkGtJ,KAAlG,CAAwG,IAAxG,EAA8GI,SAA9G,CAAP;EACD,CAvByG;EAwB1G,oBAAoB4I,SAAS,CAACG,MAAV,CAAiBD,UAxBqE;EAyB1G,QAAQF,SAAS,CAACS,MAAV,CAAiBP,UAzBiF;EA0B1G,8BAA8BF,SAAS,CAACG,MAAV,CAAiBD,UA1B2D;EA2B1G,SAAS,SAASjE,KAAT,CAAe5C,KAAf,EAAsBwH,QAAtB,EAAgCC,aAAhC,EAA+C;IACtD,IAAI,CAACtK,MAAM,CAACuK,SAAP,CAAiBC,cAAjB,CAAgCpI,IAAhC,CAAqCS,KAArC,EAA4CwH,QAA5C,CAAL,EAA4D;MAC1D,MAAM,IAAII,KAAJ,CAAU,SAASpI,MAAT,CAAgBgI,QAAhB,EAA0B,wDAA1B,EAAoFhI,MAApF,CAA2FiI,aAA3F,EAA0G,uCAA1G,CAAV,CAAN;IACD;EACF,CA/ByG;EAgC1G,YAAYd,SAAS,CAACG,MAAV,CAAiBD,UAhC6E;EAiC1G,SAASF,SAAS,CAACG,MAAV,CAAiBD,UAjCgF;EAkC1G,gBAAgBF,SAAS,CAACS,MAAV,CAAiBP,UAlCyE;EAmC1G,aAAaF,SAAS,CAACG;AAnCmF,CAArE,CArVxB,EAyXXhK,KAzXO,CAAX;;AA2XAF,eAAe,CAACmC,OAAD,EAAU,cAAV,EAA0B;EACvCoD,UAAU,EAAE,KAD2B;EAEvCM,SAAS,EAAEoF,QAF4B;EAGvC/B,eAAe,EAAEgC,IAHsB;EAIvCxD,QAAQ,EAAEwD,IAJ6B;EAKvCpF,gBAAgB,EAAE,EALqB;EAMvCC,IAAI,EAAE,MANiC;EAOvCwC,0BAA0B,EAAErG,qCAPW;EAQvC8D,KAAK,EAAE/D,WARgC;EASvCgE,QAAQ,EAAE,CAT6B;EAUvCE,YAAY,EAAE;AAVyB,CAA1B,CAAf;;AAaA,SAAS8E,QAAT,CAAkBpH,KAAlB,EAAyB;EACvB,OAAOA,KAAP;AACD;;AAED,SAASqH,IAAT,GAAgB,CAAE;;AAElB,IAAIC,iCAAiC,GAAGvB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,IAAxC,GAA+C;EACrF,iBAAiBC,SAAS,CAACG,MAAV,CAAiBD,UADmD;EAErF,gBAAgBF,SAAS,CAACG,MAAV,CAAiBD,UAFoD;EAGrF,aAAaF,SAAS,CAACqB,IAAV,CAAenB,UAHyD;EAIrF,YAAYF,SAAS,CAACqB,IAAV,CAAenB;AAJ0D,CAAvF;AAMApI,QAAQ,CAACM,OAAD,CAAR;AACA,eAAeA,OAAf;AACA,IAAIkJ,0BAA0B,GAAGzB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,IAAxC,GAA+CC,SAAS,CAACqB,IAA1F;AACA,SAASE,kCAAT,QAAmD,kCAAnD;AACA,OAAOvB,SAAP,MAAsB,YAAtB;AACA,SAASoB,iCAAT;AACA,SAASE,0BAAT"},"metadata":{},"sourceType":"module"}