{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n/**\n * Caches measurements for a given cell.\n */\n\nvar CellMeasurerCacheDecorator = /*#__PURE__*/function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","map":{"version":3,"names":["_classCallCheck","_createClass","_defineProperty","CellMeasurerCache","CellMeasurerCacheDecorator","_this","params","arguments","length","undefined","_ref","index","_cellMeasurerCache","columnWidth","_columnIndexOffset","_ref2","rowHeight","_rowIndexOffset","cellMeasurerCache","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","key","value","clear","rowIndex","columnIndex","clearAll","hasFixedHeight","hasFixedWidth","getHeight","getWidth","has","set","width","height","get","defaultHeight","defaultWidth","default"],"sources":["/Users/stoneye/react_project/circle-app-react-hook/node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };"],"mappings":"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"},"metadata":{},"sourceType":"module"}