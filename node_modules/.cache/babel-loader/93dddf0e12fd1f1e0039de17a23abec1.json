{"ast":null,"code":"import _toConsumableArray from \"/Users/stoneye/react_project/circle-app-react-hook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/stoneye/react_project/circle-app-react-hook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useRef } from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { useSize } from 'ahooks';\nimport { rubberbandIfOutOfBounds } from '../../utils/rubberband';\nimport { useDragAndPinch } from '../../utils/use-drag-and-pinch';\nimport { bound } from '../../utils/bound';\nimport * as mat from '../../utils/matrix';\nvar classPrefix = \"adm-image-viewer\";\nexport var Slide = function Slide(props) {\n  var dragLockRef = props.dragLockRef;\n  var controlRef = useRef(null);\n  var imgRef = useRef(null);\n\n  var _useSpring = useSpring(function () {\n    return {\n      matrix: mat.create(),\n      config: {\n        tension: 200\n      }\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      matrix = _useSpring2[0].matrix,\n      api = _useSpring2[1];\n\n  var controlSize = useSize(controlRef);\n  var imgSize = useSize(imgRef);\n  var pinchLockRef = useRef(false);\n\n  var boundMatrix = function boundMatrix(nextMatrix, type) {\n    var last = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!controlSize || !imgSize) return nextMatrix;\n    var controlLeft = -controlSize.width / 2;\n    var controlTop = -controlSize.height / 2;\n    var imgLeft = -imgSize.width / 2;\n    var imgTop = -imgSize.height / 2;\n    var zoom = mat.getScaleX(nextMatrix);\n    var scaledImgWidth = zoom * imgSize.width;\n    var scaledImgHeight = zoom * imgSize.height;\n\n    var _mat$apply = mat.apply(nextMatrix, [imgLeft, imgTop]),\n        _mat$apply2 = _slicedToArray(_mat$apply, 2),\n        x = _mat$apply2[0],\n        y = _mat$apply2[1];\n\n    if (type === 'translate') {\n      var boundedX = x;\n      var boundedY = y;\n\n      if (scaledImgWidth > controlSize.width) {\n        var minX = controlLeft - (scaledImgWidth - controlSize.width);\n        var maxX = controlLeft;\n        boundedX = last ? bound(x, minX, maxX) : rubberbandIfOutOfBounds(x, minX, maxX, zoom * 50);\n      } else {\n        boundedX = -scaledImgWidth / 2;\n      }\n\n      if (scaledImgHeight > controlSize.height) {\n        var minY = controlTop - (scaledImgHeight - controlSize.height);\n        var maxY = controlTop;\n        boundedY = last ? bound(y, minY, maxY) : rubberbandIfOutOfBounds(y, minY, maxY, zoom * 50);\n      } else {\n        boundedY = -scaledImgHeight / 2;\n      }\n\n      return mat.translate(nextMatrix, boundedX - x, boundedY - y);\n    }\n\n    if (type === 'scale' && last) {\n      var _boundedX = scaledImgWidth > controlSize.width ? bound(x, controlLeft - (scaledImgWidth - controlSize.width), controlLeft) : -scaledImgWidth / 2,\n          _boundedY = scaledImgHeight > controlSize.height ? bound(y, controlTop - (scaledImgHeight - controlSize.height), controlTop) : -scaledImgHeight / 2;\n\n      return mat.translate(nextMatrix, _boundedX - x, _boundedY - y);\n    }\n\n    return nextMatrix;\n  };\n\n  useDragAndPinch({\n    onDrag: function onDrag(state) {\n      if (state.first) return;\n      if (state.pinching) return state.cancel();\n\n      if (state.tap && state.elapsedTime > 0 && state.elapsedTime < 1000) {\n        // 判断点击时间>0是为了过滤掉非正常操作，例如用户长按选择图片之后的取消操作（也是一次点击）\n        props.onTap();\n        return;\n      }\n\n      var currentZoom = mat.getScaleX(matrix.get());\n\n      if (dragLockRef) {\n        dragLockRef.current = currentZoom !== 1;\n      }\n\n      if (!pinchLockRef.current && currentZoom <= 1) {\n        api.start({\n          matrix: mat.create()\n        });\n      } else {\n        var currentMatrix = matrix.get();\n        var offset = [state.offset[0] - mat.getTranslateX(currentMatrix), state.offset[1] - mat.getTranslateY(currentMatrix)];\n        var nextMatrix = mat.translate.apply(mat, [currentMatrix].concat(_toConsumableArray(state.last ? [offset[0] + state.velocity[0] * state.direction[0] * 200, offset[1] + state.velocity[1] * state.direction[1] * 200] : offset)));\n        api.start({\n          matrix: boundMatrix(nextMatrix, 'translate', state.last),\n          immediate: !state.last\n        });\n      }\n    },\n    onPinch: function onPinch(state) {\n      var _a;\n\n      pinchLockRef.current = !state.last;\n\n      var _state$offset = _slicedToArray(state.offset, 1),\n          d = _state$offset[0];\n\n      if (d < 0) return;\n      var nextZoom = state.last ? bound(d, 1, props.maxZoom) : d;\n      (_a = props.onZoomChange) === null || _a === void 0 ? void 0 : _a.call(props, nextZoom);\n\n      if (state.last && nextZoom <= 1) {\n        api.start({\n          matrix: mat.create()\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = false;\n        }\n      } else {\n        if (!controlSize) return;\n        var currentMatrix = matrix.get();\n        var currentZoom = mat.getScaleX(currentMatrix);\n        var originOffsetX = state.origin[0] - controlSize.width / 2;\n        var originOffsetY = state.origin[1] - controlSize.height / 2;\n        var nextMatrix = mat.translate(currentMatrix, -originOffsetX, -originOffsetY);\n        nextMatrix = mat.scale(nextMatrix, nextZoom / currentZoom);\n        nextMatrix = mat.translate(nextMatrix, originOffsetX, originOffsetY);\n        api.start({\n          matrix: boundMatrix(nextMatrix, 'scale', state.last),\n          immediate: !state.last\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = true;\n        }\n      }\n    }\n  }, {\n    target: controlRef,\n    drag: {\n      // filterTaps: true,\n      from: function from() {\n        return [mat.getTranslateX(matrix.get()), mat.getTranslateY(matrix.get())];\n      },\n      pointer: {\n        touch: true\n      }\n    },\n    pinch: {\n      from: function from() {\n        return [mat.getScaleX(matrix.get()), 0];\n      },\n      pointer: {\n        touch: true\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-slide\"),\n    onPointerMove: function onPointerMove(e) {\n      if (mat.getScaleX(matrix.get()) !== 1) {\n        e.stopPropagation();\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: \"\".concat(classPrefix, \"-control\"),\n    ref: controlRef\n  }, React.createElement(animated.div, {\n    className: \"\".concat(classPrefix, \"-image-wrapper\"),\n    style: {\n      matrix: matrix\n    }\n  }, React.createElement(\"img\", {\n    ref: imgRef,\n    src: props.image,\n    draggable: false,\n    alt: props.image\n  }))));\n};","map":{"version":3,"names":["React","useRef","useSpring","animated","useSize","rubberbandIfOutOfBounds","useDragAndPinch","bound","mat","classPrefix","Slide","props","dragLockRef","controlRef","imgRef","matrix","create","config","tension","api","controlSize","imgSize","pinchLockRef","boundMatrix","nextMatrix","type","last","controlLeft","width","controlTop","height","imgLeft","imgTop","zoom","getScaleX","scaledImgWidth","scaledImgHeight","apply","x","y","boundedX","boundedY","minX","maxX","minY","maxY","translate","onDrag","state","first","pinching","cancel","tap","elapsedTime","onTap","currentZoom","get","current","start","currentMatrix","offset","getTranslateX","getTranslateY","velocity","direction","immediate","onPinch","_a","d","nextZoom","maxZoom","onZoomChange","call","originOffsetX","origin","originOffsetY","scale","target","drag","from","pointer","touch","pinch","createElement","className","onPointerMove","e","stopPropagation","ref","div","style","src","image","draggable","alt"],"sources":["/Users/stoneye/react_project/circle-app-react-hook/node_modules/antd-mobile/es/components/image-viewer/slide.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { useSize } from 'ahooks';\nimport { rubberbandIfOutOfBounds } from '../../utils/rubberband';\nimport { useDragAndPinch } from '../../utils/use-drag-and-pinch';\nimport { bound } from '../../utils/bound';\nimport * as mat from '../../utils/matrix';\nconst classPrefix = `adm-image-viewer`;\nexport const Slide = props => {\n  const {\n    dragLockRef\n  } = props;\n  const controlRef = useRef(null);\n  const imgRef = useRef(null);\n  const [{\n    matrix\n  }, api] = useSpring(() => ({\n    matrix: mat.create(),\n    config: {\n      tension: 200\n    }\n  }));\n  const controlSize = useSize(controlRef);\n  const imgSize = useSize(imgRef);\n  const pinchLockRef = useRef(false);\n\n  const boundMatrix = (nextMatrix, type, last = false) => {\n    if (!controlSize || !imgSize) return nextMatrix;\n    const controlLeft = -controlSize.width / 2;\n    const controlTop = -controlSize.height / 2;\n    const imgLeft = -imgSize.width / 2;\n    const imgTop = -imgSize.height / 2;\n    const zoom = mat.getScaleX(nextMatrix);\n    const scaledImgWidth = zoom * imgSize.width;\n    const scaledImgHeight = zoom * imgSize.height;\n    const [x, y] = mat.apply(nextMatrix, [imgLeft, imgTop]);\n\n    if (type === 'translate') {\n      let boundedX = x;\n      let boundedY = y;\n\n      if (scaledImgWidth > controlSize.width) {\n        const minX = controlLeft - (scaledImgWidth - controlSize.width);\n        const maxX = controlLeft;\n        boundedX = last ? bound(x, minX, maxX) : rubberbandIfOutOfBounds(x, minX, maxX, zoom * 50);\n      } else {\n        boundedX = -scaledImgWidth / 2;\n      }\n\n      if (scaledImgHeight > controlSize.height) {\n        const minY = controlTop - (scaledImgHeight - controlSize.height);\n        const maxY = controlTop;\n        boundedY = last ? bound(y, minY, maxY) : rubberbandIfOutOfBounds(y, minY, maxY, zoom * 50);\n      } else {\n        boundedY = -scaledImgHeight / 2;\n      }\n\n      return mat.translate(nextMatrix, boundedX - x, boundedY - y);\n    }\n\n    if (type === 'scale' && last) {\n      const [boundedX, boundedY] = [scaledImgWidth > controlSize.width ? bound(x, controlLeft - (scaledImgWidth - controlSize.width), controlLeft) : -scaledImgWidth / 2, scaledImgHeight > controlSize.height ? bound(y, controlTop - (scaledImgHeight - controlSize.height), controlTop) : -scaledImgHeight / 2];\n      return mat.translate(nextMatrix, boundedX - x, boundedY - y);\n    }\n\n    return nextMatrix;\n  };\n\n  useDragAndPinch({\n    onDrag: state => {\n      if (state.first) return;\n      if (state.pinching) return state.cancel();\n\n      if (state.tap && state.elapsedTime > 0 && state.elapsedTime < 1000) {\n        // 判断点击时间>0是为了过滤掉非正常操作，例如用户长按选择图片之后的取消操作（也是一次点击）\n        props.onTap();\n        return;\n      }\n\n      const currentZoom = mat.getScaleX(matrix.get());\n\n      if (dragLockRef) {\n        dragLockRef.current = currentZoom !== 1;\n      }\n\n      if (!pinchLockRef.current && currentZoom <= 1) {\n        api.start({\n          matrix: mat.create()\n        });\n      } else {\n        const currentMatrix = matrix.get();\n        const offset = [state.offset[0] - mat.getTranslateX(currentMatrix), state.offset[1] - mat.getTranslateY(currentMatrix)];\n        const nextMatrix = mat.translate(currentMatrix, ...(state.last ? [offset[0] + state.velocity[0] * state.direction[0] * 200, offset[1] + state.velocity[1] * state.direction[1] * 200] : offset));\n        api.start({\n          matrix: boundMatrix(nextMatrix, 'translate', state.last),\n          immediate: !state.last\n        });\n      }\n    },\n    onPinch: state => {\n      var _a;\n\n      pinchLockRef.current = !state.last;\n      const [d] = state.offset;\n      if (d < 0) return;\n      const nextZoom = state.last ? bound(d, 1, props.maxZoom) : d;\n      (_a = props.onZoomChange) === null || _a === void 0 ? void 0 : _a.call(props, nextZoom);\n\n      if (state.last && nextZoom <= 1) {\n        api.start({\n          matrix: mat.create()\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = false;\n        }\n      } else {\n        if (!controlSize) return;\n        const currentMatrix = matrix.get();\n        const currentZoom = mat.getScaleX(currentMatrix);\n        const originOffsetX = state.origin[0] - controlSize.width / 2;\n        const originOffsetY = state.origin[1] - controlSize.height / 2;\n        let nextMatrix = mat.translate(currentMatrix, -originOffsetX, -originOffsetY);\n        nextMatrix = mat.scale(nextMatrix, nextZoom / currentZoom);\n        nextMatrix = mat.translate(nextMatrix, originOffsetX, originOffsetY);\n        api.start({\n          matrix: boundMatrix(nextMatrix, 'scale', state.last),\n          immediate: !state.last\n        });\n\n        if (dragLockRef) {\n          dragLockRef.current = true;\n        }\n      }\n    }\n  }, {\n    target: controlRef,\n    drag: {\n      // filterTaps: true,\n      from: () => [mat.getTranslateX(matrix.get()), mat.getTranslateY(matrix.get())],\n      pointer: {\n        touch: true\n      }\n    },\n    pinch: {\n      from: () => [mat.getScaleX(matrix.get()), 0],\n      pointer: {\n        touch: true\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    className: `${classPrefix}-slide`,\n    onPointerMove: e => {\n      if (mat.getScaleX(matrix.get()) !== 1) {\n        e.stopPropagation();\n      }\n    }\n  }, React.createElement(\"div\", {\n    className: `${classPrefix}-control`,\n    ref: controlRef\n  }, React.createElement(animated.div, {\n    className: `${classPrefix}-image-wrapper`,\n    style: {\n      matrix\n    }\n  }, React.createElement(\"img\", {\n    ref: imgRef,\n    src: props.image,\n    draggable: false,\n    alt: props.image\n  }))));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}