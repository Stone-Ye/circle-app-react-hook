{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\n\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","map":{"version":3,"names":["_classCallCheck","_createClass","Section","_ref","height","width","x","y","_indexMap","_indices","key","value","addCellIndex","_ref2","index","push","getCellIndices","toString","concat","default","bpfrpt_proptype_Index","bpfrpt_proptype_SizeAndPositionInfo"],"sources":["/Users/stoneye/react_project/circle-app-react-hook/node_modules/react-virtualized/dist/es/Collection/Section.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GACX,aACA,YAAY;EACV,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;IACrB,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;IAAA,IACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;IAAA,IAEIC,CAAC,GAAGH,IAAI,CAACG,CAFb;IAAA,IAGIC,CAAC,GAAGJ,IAAI,CAACI,CAHb;;IAKAP,eAAe,CAAC,IAAD,EAAOE,OAAP,CAAf;;IAEA,KAAKE,MAAL,GAAcA,MAAd;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAT;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,QAAL,GAAgB,EAAhB;EACD;EACD;;;EAGAR,YAAY,CAACC,OAAD,EAAU,CAAC;IACrBQ,GAAG,EAAE,cADgB;IAErBC,KAAK,EAAE,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;MAClC,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB;;MAEA,IAAI,CAAC,KAAKN,SAAL,CAAeM,KAAf,CAAL,EAA4B;QAC1B,KAAKN,SAAL,CAAeM,KAAf,IAAwB,IAAxB;;QAEA,KAAKL,QAAL,CAAcM,IAAd,CAAmBD,KAAnB;MACD;IACF;IACD;;EAXqB,CAAD,EAanB;IACDJ,GAAG,EAAE,gBADJ;IAEDC,KAAK,EAAE,SAASK,cAAT,GAA0B;MAC/B,OAAO,KAAKP,QAAZ;IACD;IACD;;EALC,CAbmB,EAoBnB;IACDC,GAAG,EAAE,UADJ;IAEDC,KAAK,EAAE,SAASM,QAAT,GAAoB;MACzB,OAAO,GAAGC,MAAH,CAAU,KAAKZ,CAAf,EAAkB,GAAlB,EAAuBY,MAAvB,CAA8B,KAAKX,CAAnC,EAAsC,GAAtC,EAA2CW,MAA3C,CAAkD,KAAKb,KAAvD,EAA8D,GAA9D,EAAmEa,MAAnE,CAA0E,KAAKd,MAA/E,CAAP;IACD;EAJA,CApBmB,CAAV,CAAZ;;EA2BA,OAAOF,OAAP;AACD,CA/CD,EAFA;;AAmDA,SAASA,OAAO,IAAIiB,OAApB;AACA,SAASC,qBAAT,QAAsC,SAAtC;AACA,SAASC,mCAAT,QAAoD,SAApD"},"metadata":{},"sourceType":"module"}