{"ast":null,"code":"import _defineProperty from \"/Users/stoneye/react_project/circle-app-react-hook/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/stoneye/react_project/circle-app-react-hook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/stoneye/react_project/circle-app-react-hook/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport React, { useEffect, useMemo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getTreeDeep } from '../../utils/tree';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Checkbox from '../checkbox';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { devWarning } from '../../utils/dev-log';\nvar classPrefix = \"adm-tree-select-multiple\";\nexport var Multiple = function Multiple(p) {\n  var props = mergeProps({\n    options: [],\n    fieldNames: {},\n    allSelectText: [],\n    defaultExpandKeys: [],\n    defaultValue: []\n  }, p);\n  useEffect(function () {\n    devWarning('TreeSelect', 'TreeSelect.Multiple has been deprecated.');\n  }, []);\n  var labelName = props.fieldNames.label || 'label';\n  var valueName = props.fieldNames.value || 'value';\n  var childrenName = props.fieldNames.children || 'children'; // 打开的 keys\n\n  var _usePropsValue = usePropsValue({\n    value: props.expandKeys,\n    defaultValue: props.defaultExpandKeys\n  }),\n      _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n      expandKeys = _usePropsValue2[0],\n      setExpandKeys = _usePropsValue2[1]; // 选中的 value（聚合后）\n\n\n  var _usePropsValue3 = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue\n  }),\n      _usePropsValue4 = _slicedToArray(_usePropsValue3, 2),\n      value = _usePropsValue4[0],\n      setValue = _usePropsValue4[1]; // 获取目标所有叶子节点 key 集合\n\n\n  var getLeafKeys = function getLeafKeys(option) {\n    var keys = [];\n\n    var walker = function walker(op) {\n      var _a;\n\n      if (!op) {\n        return;\n      }\n\n      if ((_a = op[childrenName]) === null || _a === void 0 ? void 0 : _a.length) {\n        op[childrenName].forEach(function (i) {\n          return walker(i);\n        });\n      } else {\n        keys.push(op[valueName]);\n      }\n    };\n\n    walker(option);\n    return keys;\n  };\n\n  var _useMemo = useMemo(function () {\n    var deep = getTreeDeep(props.options, childrenName);\n    var optionsMap = new Map();\n    var optionsParentMap = new Map();\n\n    function traverse(current, children) {\n      children.forEach(function (item) {\n        optionsParentMap.set(item[valueName], current);\n        optionsMap.set(item[valueName], item);\n\n        if (item[childrenName]) {\n          traverse(item, item[childrenName]);\n        }\n      });\n    }\n\n    traverse(undefined, props.options);\n    return [deep, optionsMap, optionsParentMap];\n  }, [props.options]),\n      _useMemo2 = _slicedToArray(_useMemo, 3),\n      deep = _useMemo2[0],\n      optionsMap = _useMemo2[1],\n      optionsParentMap = _useMemo2[2]; // 将聚合的 value 拆分开，获得叶子节点的 value 集合\n\n\n  var allSelectedLeafKeys = useMemo(function () {\n    var leafKeys = [];\n    value.forEach(function (v) {\n      var option = optionsMap.get(v);\n      leafKeys = leafKeys.concat(getLeafKeys(option));\n    });\n    return leafKeys;\n  }, [value, optionsMap]); // 子级有被选中的节点集合\n\n  var dotMap = useMemo(function () {\n    var map = new Map(); // 遍历 allChildrenValues, 向上递归\n\n    var walker = function walker(key) {\n      var parentOption = optionsParentMap.get(key);\n\n      if (!parentOption) {\n        return;\n      }\n\n      map.set(parentOption[valueName], true);\n      walker(parentOption[valueName]);\n    };\n\n    allSelectedLeafKeys.forEach(function (key) {\n      map.set(key, true);\n      walker(key);\n    });\n    return map;\n  }, [optionsParentMap, value]);\n\n  var onChange = function onChange(targetKeys) {\n    var _a;\n\n    var groupKeys = _toConsumableArray(targetKeys);\n\n    var unusedKeys = [];\n\n    var walker = function walker(keys) {\n      keys.forEach(function (key) {\n        var _a;\n\n        if (unusedKeys.includes(key)) {\n          return;\n        }\n\n        var parent = optionsParentMap.get(key);\n\n        if (!parent) {\n          return;\n        }\n\n        var childrenKeys = ((_a = parent[childrenName]) === null || _a === void 0 ? void 0 : _a.map(function (i) {\n          return i[valueName];\n        })) || [];\n\n        if (childrenKeys.every(function (i) {\n          return groupKeys.includes(i);\n        })) {\n          groupKeys.push(parent[valueName]);\n          unusedKeys = unusedKeys.concat(childrenKeys);\n        }\n      });\n    }; // 遍历 deep 次 groupKeys，每次往上聚合一层\n\n\n    for (var i = 0; i < deep; i++) {\n      walker(groupKeys);\n    }\n\n    groupKeys = groupKeys.filter(function (i) {\n      return !unusedKeys.includes(i);\n    }); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    var groupOptions = groupKeys.map(function (i) {\n      return optionsMap.get(i);\n    });\n    setValue(groupKeys);\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, groupKeys, groupOptions);\n  };\n\n  var onItemSelect = function onItemSelect(option) {\n    var _a;\n\n    var parentNodes = [];\n    var current = option;\n\n    while (current) {\n      parentNodes.unshift(current);\n      var next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n\n    var keys = parentNodes.map(function (i) {\n      return i[valueName];\n    });\n    setExpandKeys(keys);\n    (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, parentNodes);\n  }; // 渲染全选节点\n\n\n  var renderSelectAllItem = function renderSelectAllItem(columnOptions, index) {\n    var _a;\n\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    var currentLeafKeys = [];\n    columnOptions.forEach(function (option) {\n      currentLeafKeys = currentLeafKeys.concat(getLeafKeys(option));\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: \"\".concat(classPrefix, \"-item\")\n    }, text);\n  }; // 渲染\n\n\n  var renderSelectAllLeafItem = function renderSelectAllLeafItem(columnOptions, index) {\n    var _a;\n\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    var currentLeafKeys = columnOptions.map(function (i) {\n      return i[valueName];\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    var halfSelected = allSelected ? false : currentLeafKeys.some(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), \"\".concat(classPrefix, \"-item-leaf\"))\n    }, React.createElement(Checkbox, {\n      className: \"\".concat(classPrefix, \"-item-checkbox\"),\n      checked: allSelected,\n      indeterminate: halfSelected\n    }), text);\n  }; // 渲染节点\n\n\n  var renderItem = function renderItem(option) {\n    var isExpand = expandKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (!isExpand) {\n          onItemSelect(option);\n        }\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), _defineProperty({}, \"\".concat(classPrefix, \"-item-expand\"), isExpand))\n    }, option[labelName], !!dotMap.get(option[valueName]) && React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-dot\")\n    }));\n  }; // 渲染叶子节点\n\n\n  var renderLeafItem = function renderLeafItem(option) {\n    var isSelected = allSelectedLeafKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (isSelected) {\n          onChange(allSelectedLeafKeys.filter(function (val) {\n            return val !== option[valueName];\n          }));\n        } else {\n          onChange([].concat(_toConsumableArray(allSelectedLeafKeys), [option[valueName]]));\n        }\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), \"\".concat(classPrefix, \"-item-leaf\"))\n    }, React.createElement(Checkbox, {\n      className: \"\".concat(classPrefix, \"-item-checkbox\"),\n      checked: isSelected\n    }), option[labelName]);\n  };\n\n  var renderItems = function renderItems() {\n    var columnOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (columnOptions.length === 0) {\n      return;\n    }\n\n    var isLeaf = deep === index + 1;\n\n    if (isLeaf) {\n      return React.createElement(React.Fragment, null, renderSelectAllLeafItem(columnOptions, index), columnOptions.map(function (option) {\n        return renderLeafItem(option);\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, renderSelectAllItem(columnOptions, index), columnOptions.map(function (option) {\n      return renderItem(option);\n    }));\n  };\n\n  var renderColumns = function renderColumns() {\n    var _a;\n\n    var columns = [];\n\n    for (var i = 0; i < deep; i++) {\n      var width = \"\".concat(100 / deep, \"%\"); // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n\n      if (deep === 2 && i === 0) {\n        width = \"33.33%\";\n      }\n\n      if (deep === 2 && i === 1) {\n        width = \"66.67%\";\n      }\n\n      var column = React.createElement(\"div\", {\n        key: i,\n        className: classNames(\"\".concat(classPrefix, \"-column\")),\n        style: {\n          width: width\n        }\n      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(expandKeys[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));\n      columns.push(column);\n    }\n\n    return columns;\n  };\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, renderColumns()));\n};","map":{"version":3,"names":["classNames","React","useEffect","useMemo","withNativeProps","getTreeDeep","mergeProps","Checkbox","usePropsValue","devWarning","classPrefix","Multiple","p","props","options","fieldNames","allSelectText","defaultExpandKeys","defaultValue","labelName","label","valueName","value","childrenName","children","expandKeys","setExpandKeys","setValue","getLeafKeys","option","keys","walker","op","_a","length","forEach","i","push","deep","optionsMap","Map","optionsParentMap","traverse","current","item","set","undefined","allSelectedLeafKeys","leafKeys","v","get","concat","dotMap","map","key","parentOption","onChange","targetKeys","groupKeys","unusedKeys","includes","parent","childrenKeys","every","filter","groupOptions","call","onItemSelect","parentNodes","unshift","next","onExpand","renderSelectAllItem","columnOptions","index","text","selectAllText","currentLeafKeys","allSelected","createElement","onClick","className","renderSelectAllLeafItem","halfSelected","some","checked","indeterminate","renderItem","isExpand","renderLeafItem","isSelected","val","renderItems","isLeaf","Fragment","renderColumns","columns","width","column","style"],"sources":["/Users/stoneye/react_project/circle-app-react-hook/node_modules/antd-mobile/es/components/tree-select/multiple.js"],"sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useMemo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getTreeDeep } from '../../utils/tree';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Checkbox from '../checkbox';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { devWarning } from '../../utils/dev-log';\nconst classPrefix = `adm-tree-select-multiple`;\nexport const Multiple = p => {\n  const props = mergeProps({\n    options: [],\n    fieldNames: {},\n    allSelectText: [],\n    defaultExpandKeys: [],\n    defaultValue: []\n  }, p);\n  useEffect(() => {\n    devWarning('TreeSelect', 'TreeSelect.Multiple has been deprecated.');\n  }, []);\n  const labelName = props.fieldNames.label || 'label';\n  const valueName = props.fieldNames.value || 'value';\n  const childrenName = props.fieldNames.children || 'children'; // 打开的 keys\n\n  const [expandKeys, setExpandKeys] = usePropsValue({\n    value: props.expandKeys,\n    defaultValue: props.defaultExpandKeys\n  }); // 选中的 value（聚合后）\n\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue\n  }); // 获取目标所有叶子节点 key 集合\n\n  const getLeafKeys = option => {\n    const keys = [];\n\n    const walker = op => {\n      var _a;\n\n      if (!op) {\n        return;\n      }\n\n      if ((_a = op[childrenName]) === null || _a === void 0 ? void 0 : _a.length) {\n        op[childrenName].forEach(i => walker(i));\n      } else {\n        keys.push(op[valueName]);\n      }\n    };\n\n    walker(option);\n    return keys;\n  };\n\n  const [deep, optionsMap, optionsParentMap] = useMemo(() => {\n    const deep = getTreeDeep(props.options, childrenName);\n    const optionsMap = new Map();\n    const optionsParentMap = new Map();\n\n    function traverse(current, children) {\n      children.forEach(item => {\n        optionsParentMap.set(item[valueName], current);\n        optionsMap.set(item[valueName], item);\n\n        if (item[childrenName]) {\n          traverse(item, item[childrenName]);\n        }\n      });\n    }\n\n    traverse(undefined, props.options);\n    return [deep, optionsMap, optionsParentMap];\n  }, [props.options]); // 将聚合的 value 拆分开，获得叶子节点的 value 集合\n\n  const allSelectedLeafKeys = useMemo(() => {\n    let leafKeys = [];\n    value.forEach(v => {\n      const option = optionsMap.get(v);\n      leafKeys = leafKeys.concat(getLeafKeys(option));\n    });\n    return leafKeys;\n  }, [value, optionsMap]); // 子级有被选中的节点集合\n\n  const dotMap = useMemo(() => {\n    const map = new Map(); // 遍历 allChildrenValues, 向上递归\n\n    const walker = key => {\n      const parentOption = optionsParentMap.get(key);\n\n      if (!parentOption) {\n        return;\n      }\n\n      map.set(parentOption[valueName], true);\n      walker(parentOption[valueName]);\n    };\n\n    allSelectedLeafKeys.forEach(key => {\n      map.set(key, true);\n      walker(key);\n    });\n    return map;\n  }, [optionsParentMap, value]);\n\n  const onChange = targetKeys => {\n    var _a;\n\n    let groupKeys = [...targetKeys];\n    let unusedKeys = [];\n\n    const walker = keys => {\n      keys.forEach(key => {\n        var _a;\n\n        if (unusedKeys.includes(key)) {\n          return;\n        }\n\n        const parent = optionsParentMap.get(key);\n\n        if (!parent) {\n          return;\n        }\n\n        const childrenKeys = ((_a = parent[childrenName]) === null || _a === void 0 ? void 0 : _a.map(i => i[valueName])) || [];\n\n        if (childrenKeys.every(i => groupKeys.includes(i))) {\n          groupKeys.push(parent[valueName]);\n          unusedKeys = unusedKeys.concat(childrenKeys);\n        }\n      });\n    }; // 遍历 deep 次 groupKeys，每次往上聚合一层\n\n\n    for (let i = 0; i < deep; i++) {\n      walker(groupKeys);\n    }\n\n    groupKeys = groupKeys.filter(i => !unusedKeys.includes(i)); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    const groupOptions = groupKeys.map(i => optionsMap.get(i));\n    setValue(groupKeys);\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, groupKeys, groupOptions);\n  };\n\n  const onItemSelect = option => {\n    var _a;\n\n    const parentNodes = [];\n    let current = option;\n\n    while (current) {\n      parentNodes.unshift(current);\n      const next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n\n    const keys = parentNodes.map(i => i[valueName]);\n    setExpandKeys(keys);\n    (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, parentNodes);\n  }; // 渲染全选节点\n\n\n  const renderSelectAllItem = (columnOptions, index) => {\n    var _a;\n\n    const text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    let currentLeafKeys = [];\n    columnOptions.forEach(option => {\n      currentLeafKeys = currentLeafKeys.concat(getLeafKeys(option));\n    });\n    const allSelected = currentLeafKeys.every(i => allSelectedLeafKeys.includes(i));\n    return React.createElement(\"div\", {\n      onClick: () => {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(i => !currentLeafKeys.includes(i)));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: `${classPrefix}-item`\n    }, text);\n  }; // 渲染\n\n\n  const renderSelectAllLeafItem = (columnOptions, index) => {\n    var _a;\n\n    const text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n\n    if (!text) {\n      return;\n    }\n\n    const currentLeafKeys = columnOptions.map(i => i[valueName]);\n    const allSelected = currentLeafKeys.every(i => allSelectedLeafKeys.includes(i));\n    const halfSelected = allSelected ? false : currentLeafKeys.some(i => allSelectedLeafKeys.includes(i));\n    return React.createElement(\"div\", {\n      onClick: () => {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(i => !currentLeafKeys.includes(i)));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classNames(`${classPrefix}-item`, `${classPrefix}-item-leaf`)\n    }, React.createElement(Checkbox, {\n      className: `${classPrefix}-item-checkbox`,\n      checked: allSelected,\n      indeterminate: halfSelected\n    }), text);\n  }; // 渲染节点\n\n\n  const renderItem = option => {\n    const isExpand = expandKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: () => {\n        if (!isExpand) {\n          onItemSelect(option);\n        }\n      },\n      className: classNames(`${classPrefix}-item`, {\n        [`${classPrefix}-item-expand`]: isExpand\n      })\n    }, option[labelName], !!dotMap.get(option[valueName]) && React.createElement(\"div\", {\n      className: `${classPrefix}-dot`\n    }));\n  }; // 渲染叶子节点\n\n\n  const renderLeafItem = option => {\n    const isSelected = allSelectedLeafKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: () => {\n        if (isSelected) {\n          onChange(allSelectedLeafKeys.filter(val => val !== option[valueName]));\n        } else {\n          onChange([...allSelectedLeafKeys, option[valueName]]);\n        }\n      },\n      className: classNames(`${classPrefix}-item`, `${classPrefix}-item-leaf`)\n    }, React.createElement(Checkbox, {\n      className: `${classPrefix}-item-checkbox`,\n      checked: isSelected\n    }), option[labelName]);\n  };\n\n  const renderItems = (columnOptions = [], index) => {\n    if (columnOptions.length === 0) {\n      return;\n    }\n\n    const isLeaf = deep === index + 1;\n\n    if (isLeaf) {\n      return React.createElement(React.Fragment, null, renderSelectAllLeafItem(columnOptions, index), columnOptions.map(option => {\n        return renderLeafItem(option);\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, renderSelectAllItem(columnOptions, index), columnOptions.map(option => {\n      return renderItem(option);\n    }));\n  };\n\n  const renderColumns = () => {\n    var _a;\n\n    const columns = [];\n\n    for (let i = 0; i < deep; i++) {\n      let width = `${100 / deep}%`; // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n\n      if (deep === 2 && i === 0) {\n        width = `33.33%`;\n      }\n\n      if (deep === 2 && i === 1) {\n        width = `66.67%`;\n      }\n\n      const column = React.createElement(\"div\", {\n        key: i,\n        className: classNames(`${classPrefix}-column`),\n        style: {\n          width\n        }\n      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(expandKeys[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));\n      columns.push(column);\n    }\n\n    return columns;\n  };\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, renderColumns()));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}