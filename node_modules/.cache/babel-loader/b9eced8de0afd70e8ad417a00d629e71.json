{"ast":null,"code":"/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","map":{"version":3,"names":["bounds","NOT_FOUND","SUCCESS","EMPTY","IntervalTreeNode","mid","left","right","leftPoints","rightPoints","count","length","proto","prototype","copy","a","b","rebuild","node","intervals","ntree","createIntervalTree","rebuildWithInterval","interval","push","rebuildWithoutInterval","idx","indexOf","splice","result","apply","insert","weight","l","ge","compareBegin","r","compareEnd","remove","rw","lw","p","n","reportLeftRange","arr","hi","cb","i","reportRightRange","lo","reportRange","queryPoint","x","queryInterval","compareNumbers","d","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","tproto","Object","defineProperty","get","createWrapper"],"sources":["/Users/stoneye/react_project/circle-app-react-hook/node_modules/react-virtualized/dist/es/vendor/intervalTree.js"],"sourcesContent":["/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}